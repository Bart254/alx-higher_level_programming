matrix multiplication - only matrix product (two matrices)

Prototype: def matrix_mul(m_a, m_b):

m_a and m_b must be validated with these requirements in this order

m_a and m_b must be an list of lists of integers or floats:

>>> import sys
>>> sys.path.append('..')
>>> matrix_mul = __import__('100-matrix_mul').matrix_mul
>>> matrix_mul(5, [[1, 2]])
Traceback (most recent call last):
    ...
TypeError: m_a must be a list

>>> matrix_mul([[1, 2]], 5)
Traceback (most recent call last):
    ...
TypeError: m_b must be a list

>>> matrix_mul([1, 2, 3], [[1, 2]])
Traceback (most recent call last):
    ...
TypeError: m_a must be a list of lists

>>> matrix_mul([[1, 2], [3, 4]], [1, 2, 3])
Traceback (most recent call last):
    ...
TypeError: m_b must be a list of lists

>>> matrix_mul([], [[1, 2], [3, 4]])
Traceback (most recent call last):
    ...
ValueError: m_a can't be empty

>>> matrix_mul([[1, 2], [3, 4]], [])
Traceback (most recent call last):
    ...
ValueError: m_b can't be empty

>>> matrix_mul([[]], [[1, 2], [3, 4]])
Traceback (most recent call last):
    ...
ValueError: m_a can't be empty

>>> matrix_mul([[1, 2], [3, 4]], [[]])
Traceback (most recent call last):
    ...
ValueError: m_b can't be empty

if one element of those list of lists is not an integer or a float: raise a TypeError exception with the message m_a should contain only integers or floats or m_b should contain only integers or floats

>>> matrix_mul([[1, 2], ['a', 4]], [[1, 2], [3, 4]])
Traceback (most recent call last):
    ...
TypeError: m_a should contain only integers or floats

>>> matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 'b']])
Traceback (most recent call last):
    ...
TypeError: m_b should contain only integers or floats

if m_a or m_b is not a rectangle (all ‘rows’ should be of the same size): raise a TypeError exception with the message each row of m_a must be of the same size or each row of m_b must be of the same size

>>> matrix_mul([[1, 2], [3, 4], [5, 6, 7]], [[1, 2], [3, 4]])
Traceback (most recent call last):
    ...
TypeError: each row of m_a must be of the same size

>>> matrix_mul([[1, 2], [3, 4]], [[1, 2], [3]])
Traceback (most recent call last):
    ...
TypeError: each row of m_b must be of the same size

If m_a and m_b can’t be multiplied: raise a ValueError exception with the message m_a and m_b can't be multiplied

>>> matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4], [5, 6]])
Traceback (most recent call last):
    ...
ValueError: m_a and m_b can't be multiplied

Matrix multiplication - only Matrix product (two matrices)
>>> matrix_mul([[1]], [[2]])
[[2]]

>>> matrix_mul([[-1, -2], [-3, -4]], [[-5, -6], [-7, -8]])
[[19, 22], [43, 50]]

>>> matrix_mul([[1, 2], [3, 4]], [[5, 6], [7, 8]])
[[19, 22], [43, 50]]

>>> matrix_mul([[1, -2], [-3, 4]], [[-5, 6], [7, -8]])
[[-19, 22], [43, -50]]

>>> matrix_mul([[1, 1], [1, 1]], [[1, 1], [1, 1]])
[[2, 2], [2, 2]]

>>> matrix_mul([[1, 2], [2, 3]], [[3, 4], [4, 5]])
[[11, 14], [18, 23]]

>>> matrix_mul([[1.5, 2.5], [3.5, 4.5]], [[1.5, 2.5], [3.5, 4.5]])
[[11.0, 15.0], [21.0, 29.0]]
